syntax = "proto3";

option csharp_namespace = "GrpcServiceTranscoding";
import "Protos/google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

//package Tours;

service ToursService {
  rpc GetAll(GetAllRequest) returns (GetAllResponse) {
       option (google.api.http) = {
          get: "/tour"
       };
  }
  rpc GetPublished(GetPublishedRequest) returns (GetPublishedResponse) {
    option (google.api.http) = {
          get: "/tour/published"
    };
  }
  rpc GetById(GetByIdRequest) returns (GetByIdResponse) {
    option (google.api.http) = {
          get: "/tour"
    };
  }
  rpc GetByAuthorId(GetByAuthorIdRequest) returns (GetByAuthorIdResponse) {
    option (google.api.http) = {
          get: "/tour/authors"
    };
  }
  rpc Create(CreateRequest) returns (CreateResponse) {
      option (google.api.http) = {
          post: "/tour"
          body: "*"
      };
  }
  rpc Update(UpdateRequest) returns (UpdateResponse) {
    option (google.api.http) = {
          put: "/tour"
          body: "*"
      };
  }
  rpc Delete(DeleteRequest) returns (DeleteResponse) {
     option (google.api.http) = {
          delete: "/tour"
     };
  }
  rpc Publish(PublishRequest) returns (PublishResponse) {
    option (google.api.http) = {
          put: "/tour/publish"
          body: "*"
     };
  }
  rpc Archive(ArchiveRequest) returns (ArchiveResponse) {
    option (google.api.http) = {
          put: "/tour/archive"
          body: "*"
     };
  }
  rpc AddDurations(AddDurationsRequest) returns (AddDurationsResponse) {
    option (google.api.http) = {
          put: "/tour/durations"
          body: "*"
     };
  }
  rpc AddEquipment(AddEquipmentRequest) returns (AddEquipmentResponse) {
    option (google.api.http) = {
          post: "/tour/equipment"
          body: "*"
     };
  }
  rpc DeleteEquipment(DeleteEquipmentRequest) returns (DeleteEquipmentResponse) {
    option (google.api.http) = {
          delete: "/tour/equipment"
     };
  }
  rpc GetEquipment(GetEquipmentRequest) returns (GetEquipmentResponse) {
     option (google.api.http) = {
          get: "/tour/equipment"
     };
  }
}

message Tour {
  int64 ID = 1;
  int32 AuthorId = 2;
  string Name = 3;
  string Description = 4;
  int32 Difficulty = 5;
  repeated string Tags = 6;
  enum TourStatus {
    Draft = 0;
    Published = 1;
    Archived = 2;
    Ready = 3;
  }
  TourStatus status = 7;
  double Price = 8;
  double Distance = 9;
  google.protobuf.Timestamp PublishDate = 10;
  google.protobuf.Timestamp ArchiveDate = 11;
  enum TourCategory {
    Adventure = 0;
    FamilyTrips = 1;
    Cruise = 2;
    Cultural = 3;
  }
  TourCategory category = 12;
  bool IsDeleted = 13;
  repeated TourKeyPoint KeyPoints = 14;
  repeated TourEquipment equipment = 15;
  repeated TourReview Reviews = 16;
  repeated TourDuration Durations = 17;
}

message TourEquipment {
  int64 ID = 1;
  string Name = 2;
  string Description = 3;
  repeated Tour Tours = 4;
}

message TourFacility {
  int64 ID = 1;
  int64 AuthorId = 2;
  string Name = 3;
  string Description = 4;
  double Longitude = 5;
  double Latitude = 6;
  enum Category {
    Restaurant = 0;
    ParkingLot = 1;
    Toilet = 2;
    Hospital = 3;
    Cafe = 4;
    Pharmacy = 5;
    ExchangeOffice = 6;
    BusStop = 7;
    Shop = 8;
    Other = 9;
  };
  Category category = 8;
  string ImagePath = 9;
}

message TourKeyPoint {
  int64 ID = 1;
  int64 TourId = 2;
  string Name = 3;
  string Description = 4;
  double Longitude = 5;
  double Latitude = 6;
  string LocationAddress = 7;
  string ImagePath = 8;
  int64 Order = 9;
}

message TourDuration {
  int32 Duration = 1;
  enum TransportType {
    Walking = 0;
    Bicycle = 1;
    Car = 2;
  }
  TransportType transportType = 2;
}

message TourReview {
  int64 ID = 1;
  int32 Rating = 2;
  string Comment = 3;
  int32 TouristId = 4;
  int64 TourId = 5;
  google.protobuf.Timestamp TourVisitDate = 6;
  google.protobuf.Timestamp CommentDate = 7;
  repeated string Images = 8;
}

message GetAllRequest {
}

message GetAllResponse {
  repeated Tour tours = 1;
}

message GetPublishedRequest {
}

message GetPublishedResponse {
  repeated Tour tours = 1;
}

message GetByIdRequest {
  string ID = 1;
}

message GetByIdResponse {
  Tour tour = 1;
}

message GetByAuthorIdRequest {
  string AuthorId = 1;
}

message GetByAuthorIdResponse {
  repeated Tour tours = 1;
}

message CreateRequest {
  Tour tour = 1;
}

message CreateResponse {
}

message UpdateRequest {
  Tour tour = 1;
}

message UpdateResponse {
}

message DeleteRequest {
  string ID = 1;
}

message DeleteResponse {
}

message PublishRequest {
  string ID = 1;
}

message PublishResponse {
}

message ArchiveRequest {
  string ID = 1;
}

message ArchiveResponse {
}

message AddDurationsRequest {
  Tour tour = 1;
}

message AddDurationsResponse {
}

message AddEquipmentRequest {
  string tourId = 1;
  string equipmentId = 2;
}

message AddEquipmentResponse {
}

message DeleteEquipmentRequest {
  string tourId = 1;
  string equipmentId = 2;
}

message DeleteEquipmentResponse {
}

message GetEquipmentRequest {
  string tourId = 1;
}

message GetEquipmentResponse {
  repeated TourEquipment equipment = 1;
}
